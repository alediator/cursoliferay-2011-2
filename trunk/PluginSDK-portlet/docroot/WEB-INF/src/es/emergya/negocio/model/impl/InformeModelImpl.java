/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.emergya.negocio.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.emergya.negocio.model.Informe;
import es.emergya.negocio.model.InformeModel;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the Informe service. Represents a row in the &quot;Emergya_Informe&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.emergya.negocio.model.InformeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link InformeImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a informe model instance should use the {@link es.emergya.negocio.model.Informe} interface instead.
 * </p>
 *
 * @author adiaz
 * @see InformeImpl
 * @see es.emergya.negocio.model.Informe
 * @see es.emergya.negocio.model.InformeModel
 * @generated
 */
public class InformeModelImpl extends BaseModelImpl<Informe>
	implements InformeModel {
	public static final String TABLE_NAME = "Emergya_Informe";
	public static final Object[][] TABLE_COLUMNS = {
			{ "informeId", new Integer(Types.BIGINT) },
			{ "companyId", new Integer(Types.BIGINT) },
			{ "userId", new Integer(Types.BIGINT) },
			{ "groupId", new Integer(Types.BIGINT) },
			{ "titulo", new Integer(Types.VARCHAR) },
			{ "descripcion", new Integer(Types.VARCHAR) },
			{ "contenido", new Integer(Types.VARCHAR) },
			{ "fechaCreacion", new Integer(Types.TIMESTAMP) }
		};
	public static final String TABLE_SQL_CREATE = "create table Emergya_Informe (informeId LONG not null primary key,companyId LONG,userId LONG,groupId LONG,titulo VARCHAR(75) null,descripcion VARCHAR(75) null,contenido VARCHAR(75) null,fechaCreacion DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Emergya_Informe";
	public static final String ORDER_BY_JPQL = " ORDER BY informe.titulo ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Emergya_Informe.titulo ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.emergya.negocio.model.Informe"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.emergya.negocio.model.Informe"),
			true);
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.emergya.negocio.model.Informe"));

	public InformeModelImpl() {
	}

	public long getPrimaryKey() {
		return _informeId;
	}

	public void setPrimaryKey(long pk) {
		setInformeId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_informeId);
	}

	public long getInformeId() {
		return _informeId;
	}

	public void setInformeId(long informeId) {
		_informeId = informeId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public String getTitulo() {
		if (_titulo == null) {
			return StringPool.BLANK;
		}
		else {
			return _titulo;
		}
	}

	public void setTitulo(String titulo) {
		_titulo = titulo;
	}

	public String getDescripcion() {
		if (_descripcion == null) {
			return StringPool.BLANK;
		}
		else {
			return _descripcion;
		}
	}

	public void setDescripcion(String descripcion) {
		_descripcion = descripcion;
	}

	public String getContenido() {
		if (_contenido == null) {
			return StringPool.BLANK;
		}
		else {
			return _contenido;
		}
	}

	public void setContenido(String contenido) {
		_contenido = contenido;
	}

	public Date getFechaCreacion() {
		return _fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		_fechaCreacion = fechaCreacion;
	}

	public Informe toEscapedModel() {
		if (isEscapedModel()) {
			return (Informe)this;
		}
		else {
			return (Informe)Proxy.newProxyInstance(Informe.class.getClassLoader(),
				new Class[] { Informe.class }, new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					Informe.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		InformeImpl informeImpl = new InformeImpl();

		informeImpl.setInformeId(getInformeId());

		informeImpl.setCompanyId(getCompanyId());

		informeImpl.setUserId(getUserId());

		informeImpl.setGroupId(getGroupId());

		informeImpl.setTitulo(getTitulo());

		informeImpl.setDescripcion(getDescripcion());

		informeImpl.setContenido(getContenido());

		informeImpl.setFechaCreacion(getFechaCreacion());

		return informeImpl;
	}

	public int compareTo(Informe informe) {
		int value = 0;

		value = getTitulo().compareTo(informe.getTitulo());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Informe informe = null;

		try {
			informe = (Informe)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = informe.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(17);

		sb.append("{informeId=");
		sb.append(getInformeId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", titulo=");
		sb.append(getTitulo());
		sb.append(", descripcion=");
		sb.append(getDescripcion());
		sb.append(", contenido=");
		sb.append(getContenido());
		sb.append(", fechaCreacion=");
		sb.append(getFechaCreacion());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(28);

		sb.append("<model><model-name>");
		sb.append("es.emergya.negocio.model.Informe");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>informeId</column-name><column-value><![CDATA[");
		sb.append(getInformeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titulo</column-name><column-value><![CDATA[");
		sb.append(getTitulo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcion</column-name><column-value><![CDATA[");
		sb.append(getDescripcion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contenido</column-name><column-value><![CDATA[");
		sb.append(getContenido());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fechaCreacion</column-name><column-value><![CDATA[");
		sb.append(getFechaCreacion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _informeId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _groupId;
	private String _titulo;
	private String _descripcion;
	private String _contenido;
	private Date _fechaCreacion;
	private transient ExpandoBridge _expandoBridge;
}